<?php

namespace {{ namespace }}\Form{{ entity_namespace ? '\\' ~ entity_namespace : '' }};

{% block use_statements %}
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolver;
use Lexik\Bundle\FormFilterBundle\Filter\Form\Type as Filters;
use Lexik\Bundle\FormFilterBundle\Filter\FilterOperands;
use Symfony\Component\Form\FormEvent;
use Symfony\Component\Form\FormEvents;
use Symfony\Component\Form\FormError;
{% endblock use_statements %}

/**
{% block phpdoc_class_header %}
 * {{ form_class }} filtro.
 * @author Nombre Apellido <name@gmail.com>
{% endblock phpdoc_class_header %}
 */
{% block class_definition %}
class {{ form_class }} extends AbstractType
{% endblock class_definition %}
{
{% block class_body %}
    {% if fields_data|length > 0 %}
    /**
     * {@inheritdoc}
     */
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
        {%- for data in fields_data if data.fieldName != 'id' %}
            {%- if data.filterWidget != "Filters\\TextFilterType::class" %}

            ->add('{{ data.fieldName }}', {{ data.filterWidget }})
                    
            {%- else %}

            ->add('{{ data.fieldName }}', {{ data.filterWidget }}, [
                'condition_pattern' => FilterOperands::OPERAND_SELECTOR,
            ])
                    
            {%- endif %}
        {%- endfor %}

        ;
    }
    {% endif %}

    /**
     * {@inheritdoc}
     */
    public function configureOptions(OptionsResolver $resolver)
    {
        $resolver->setDefaults([
            'data_class' => '{{ namespace }}\Entity{{ entity_namespace ? '\\' ~ entity_namespace : '' }}\{{ entity_class }}',
            'csrf_protection'   => false,
            'validation_groups' => ['filtering'] // avoid NotBlank() constraint-related message
        ]);
    }

    /**
     * {@inheritdoc}
     */
    public function getBlockPrefix()
    {
        return '{{ form_type_name }}';
    }

{# BC with Symfony 2.7 #}
{%- if get_name_required %}
    /**
     * {@inheritdoc}
     */
    public function getName()
    {
        return $this->getBlockPrefix();
    }
{% endif %}

{% endblock class_body %}
}
